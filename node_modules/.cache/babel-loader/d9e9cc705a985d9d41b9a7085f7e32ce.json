{"ast":null,"code":"var _jsxFileName = \"/home/body/Portofolio/weather-show/src/components/Banner.jsx\";\nimport React from 'react';\nimport styles from '../styles/styles.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Banner = ({\n  name,\n  temp_c,\n  icon,\n  text,\n  time\n}) => {\n  function Convert(time) {\n    // Check correct time format and split into components\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n    if (time.length > 1) {\n      // If time format correct\n      time = time.slice(1); // Remove full string match value\n\n      time[5] = +time[0] < 12 ? 'AM' : 'PM'; // Set AM/PM\n\n      time[0] = +time[0] % 12 || 12; // Adjust hours\n    }\n\n    return time.join('');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.banner,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: Convert(time)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: icon,\n      alt: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: temp_c\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Banner;\nexport default Banner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"sources":["/home/body/Portofolio/weather-show/src/components/Banner.jsx"],"names":["React","styles","Banner","name","temp_c","icon","text","time","Convert","toString","match","length","slice","join","banner"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAMC,EAAAA,MAAN;AAAcC,EAAAA,IAAd;AAAoBC,EAAAA,IAApB;AAA0BC,EAAAA;AAA1B,CAAD,KAAsC;AACjD,WAASC,OAAT,CAAkBD,IAAlB,EAAwB;AACpB;AACAA,IAAAA,IAAI,GAAGA,IAAI,CAACE,QAAL,GAAiBC,KAAjB,CAAwB,0CAAxB,KAAuE,CAACH,IAAD,CAA9E;;AAEA,QAAIA,IAAI,CAACI,MAAL,GAAc,CAAlB,EAAqB;AAAE;AACrBJ,MAAAA,IAAI,GAAGA,IAAI,CAACK,KAAL,CAAY,CAAZ,CAAP,CADmB,CACK;;AACxBL,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,CAACA,IAAI,CAAC,CAAD,CAAL,GAAW,EAAX,GAAgB,IAAhB,GAAuB,IAAjC,CAFmB,CAEoB;;AACvCA,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,CAACA,IAAI,CAAC,CAAD,CAAL,GAAW,EAAX,IAAiB,EAA3B,CAHmB,CAGY;AAChC;;AACD,WAAOA,IAAI,CAACM,IAAL,CAAW,EAAX,CAAP;AACH;;AACD,sBAEI;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACa,MAAvB;AAAA,4BAEQ;AAAA,gBAAON,OAAO,CAACD,IAAD;AAAd;AAAA;AAAA;AAAA;AAAA,YAFR,eAGQ;AAAA,gBAAOJ;AAAP;AAAA;AAAA;AAAA;AAAA,YAHR,eAIQ;AAAK,MAAA,GAAG,EAAEE,IAAV;AAAgB,MAAA,GAAG,EAAEC;AAArB;AAAA;AAAA;AAAA;AAAA,YAJR,eAKQ;AAAA,gBAAOF;AAAP;AAAA;AAAA;AAAA;AAAA,YALR,eAMQ;AAAA,gBAAOE;AAAP;AAAA;AAAA;AAAA;AAAA,YANR;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAaH,CAzBD;;KAAMJ,M;AA2BN,eAAeA,MAAf","sourcesContent":["import React from 'react'\n\nimport styles from '../styles/styles.module.css'\n\nconst Banner = ({name,temp_c, icon, text, time }) => {\n    function Convert (time) {\n        // Check correct time format and split into components\n        time = time.toString ().match (/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n      \n        if (time.length > 1) { // If time format correct\n          time = time.slice (1);  // Remove full string match value\n          time[5] = +time[0] < 12 ? 'AM' : 'PM'; // Set AM/PM\n          time[0] = +time[0] % 12 || 12; // Adjust hours\n        }\n        return time.join ('');\n    }\n    return (\n\n        <div className={styles.banner}>\n            \n                <span>{Convert(time)}</span>\n                <span>{name}</span>\n                <img src={icon} alt={text} />\n                <span>{temp_c}</span>\n                <span>{text}</span>\n            \n            \n        </div>\n    )\n}\n\nexport default Banner\n"]},"metadata":{},"sourceType":"module"}