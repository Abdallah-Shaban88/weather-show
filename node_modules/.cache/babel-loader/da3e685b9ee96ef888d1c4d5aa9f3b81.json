{"ast":null,"code":"import _regeneratorRuntime from\"/home/body/Portofolio/weather-show/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/body/Portofolio/weather-show/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/body/Portofolio/weather-show/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import axios from'axios';import\"./style.css\";import Banner from'./components/Banner';import DayInfo from'./components/DayInfo';import WeekInfo from\"./components/WeekInfo\";import ExtraDetails from\"./components/ExtraDetails\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),info=_useState2[0],setInfo=_useState2[1];var getData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('https://api.weatherapi.com/v1/forecast.json?key=35360d18e86c4006a60111222212904&q=giza');case 2:response=_context.sent;_context.next=5;return response.data;case 5:data=_context.sent;setInfo(data);case 7:case\"end\":return _context.stop();}}},_callee);}));return function getData(){return _ref.apply(this,arguments);};}();useEffect(function(){getData();},[]);function convertTime(time){// Check correct time format and split into components\ntime=time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/)||[time];if(time.length>1){// If time format correct\ntime=time.slice(1);// Remove full string match value\ntime[5]=+time[0]<12?'AM':'PM';// Set AM/PM\ntime[0]=+time[0]%12||12;// Adjust hours\n}return time.join('');}return/*#__PURE__*/_jsxs(\"div\",{children:[info.length!==0?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Banner,{time:info.location.localtime.slice(11,16),name:info.location.name,temp_c:info.current.temp_c,icon:info.current.condition.icon,text:info.current.condition.text,convertTime:convertTime}),/*#__PURE__*/_jsx(ExtraDetails,{windKPH:info.current.wind_kph,windDegree:info.current.wind_degree,windDir:info.current.wind_dir,pressureIn:info.current.pressure_in,humidity:info.current.humidity,cloud:info.current.cloud,feelsLikeC:info.current.feelslike_c,visibility:info.current.vis_km,uv:info.current.uv,gust:info.current.gust_kph}),/*#__PURE__*/_jsx(DayInfo,{infos:info.forecast.forecastday[0],convertTime:convertTime})]}):console.log('false'),/*#__PURE__*/_jsx(WeekInfo,{})]});}","map":{"version":3,"sources":["/home/body/Portofolio/weather-show/src/App.js"],"names":["React","useState","useEffect","axios","Banner","DayInfo","WeekInfo","ExtraDetails","App","info","setInfo","getData","get","response","data","convertTime","time","toString","match","length","slice","join","location","localtime","name","current","temp_c","condition","icon","text","wind_kph","wind_degree","wind_dir","pressure_in","humidity","cloud","feelslike_c","vis_km","uv","gust_kph","forecast","forecastday","console","log"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from \"react\";\nimport axios from 'axios'\nimport \"./style.css\";\n\nimport Banner from './components/Banner'\nimport DayInfo from './components/DayInfo'\nimport WeekInfo from \"./components/WeekInfo\";\nimport ExtraDetails from \"./components/ExtraDetails\";\n\nexport default function App() {\n  const[info, setInfo] = useState([])\n\n  const getData = async () => {\n    const response = await axios.get('https://api.weatherapi.com/v1/forecast.json?key=35360d18e86c4006a60111222212904&q=giza');\n    const data = await response.data;\n      setInfo(data)\n  }\n  useEffect(() => {\n    getData()\n  },[])\n\n  function convertTime (time) {\n    // Check correct time format and split into components\n    time = time.toString ().match (/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n  \n    if (time.length > 1) { // If time format correct\n      time = time.slice (1);  // Remove full string match value\n      time[5] = +time[0] < 12 ? 'AM' : 'PM'; // Set AM/PM\n      time[0] = +time[0] % 12 || 12; // Adjust hours\n    }\n    return time.join ('');\n}\n\n  return (\n    <div>\n      {info.length !== 0 ? <div >\n      <Banner \n        time ={info.location.localtime.slice(11, 16)}\n        name ={info.location.name} \n        temp_c={info.current.temp_c} \n        icon ={info.current.condition.icon} \n        text={info.current.condition.text} \n        convertTime = {convertTime}\n        />\n      <ExtraDetails\n        windKPH ={info.current.wind_kph}\n        windDegree ={info.current.wind_degree}\n        windDir ={info.current.wind_dir}\n        pressureIn ={info.current.pressure_in}\n        humidity ={info.current.humidity}\n        cloud ={info.current.cloud}\n        feelsLikeC ={info.current.feelslike_c}\n        visibility ={info.current.vis_km}\n        uv ={info.current.uv}\n        gust ={info.current.gust_kph}\n      />  \n      <DayInfo infos={info.forecast.forecastday[0]} convertTime={convertTime}/>\n    </div> : console.log('false')}\n    <WeekInfo />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}