{"ast":null,"code":"var _jsxFileName = \"/home/body/Portofolio/weather-show/src/components/WeekInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Day from './Day';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeekInfo = () => {\n  _s();\n\n  const [week, setWeek] = useState([]);\n\n  const getData = async () => {\n    const response = await axios.get('https://api.weatherapi.com/v1/forecast.json?key=35360d18e86c4006a60111222212904&q=giza&days=7');\n    const data = await response.data.forecast.forecastday;\n    setWeek(data);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: week.map(day => /*#__PURE__*/_jsxDEV(Day, {\n      icon: day.day.condition.icon,\n      text: day.day.condition.text,\n      maxtemp: day.day.maxtemp_c,\n      mintemp: day.day.mintemp_c,\n      date: day.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WeekInfo, \"YWh+d1LylSKSRv3n9I3H2SDKNK4=\");\n\n_c = WeekInfo;\nexport default WeekInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeekInfo\");","map":{"version":3,"sources":["/home/body/Portofolio/weather-show/src/components/WeekInfo.jsx"],"names":["React","useEffect","useState","axios","Day","WeekInfo","week","setWeek","getData","response","get","data","forecast","forecastday","map","day","condition","icon","text","maxtemp_c","mintemp_c","date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,GAAP,MAAgB,OAAhB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAiBL,QAAQ,CAAC,EAAD,CAA9B;;AACA,QAAMM,OAAO,GAAG,YAAY;AACxB,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,+FAAV,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,CAAcC,QAAd,CAAuBC,WAA1C;AACEN,IAAAA,OAAO,CAACI,IAAD,CAAP;AACH,GAJH;;AAKEV,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO;AACR,GAFQ,EAEP,EAFO,CAAT;AAGF,sBACI;AAAA,cACKF,IAAI,CAACQ,GAAL,CAASC,GAAG,iBACT,QAAC,GAAD;AACE,MAAA,IAAI,EAAEA,GAAG,CAACA,GAAJ,CAAQC,SAAR,CAAkBC,IAD1B;AAEE,MAAA,IAAI,EAAEF,GAAG,CAACA,GAAJ,CAAQC,SAAR,CAAkBE,IAF1B;AAGE,MAAA,OAAO,EAAEH,GAAG,CAACA,GAAJ,CAAQI,SAHnB;AAIE,MAAA,OAAO,EAAEJ,GAAG,CAACA,GAAJ,CAAQK,SAJnB;AAKE,MAAA,IAAI,EAAEL,GAAG,CAACM;AALZ;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAtBD;;GAAMhB,Q;;KAAAA,Q;AAwBN,eAAeA,QAAf","sourcesContent":["import React,{useEffect, useState} from 'react'\nimport axios from 'axios'\n\nimport Day from './Day'\n\nconst WeekInfo = () => {\n    const[week,setWeek] = useState([])\n    const getData = async () => {\n        const response = await axios.get('https://api.weatherapi.com/v1/forecast.json?key=35360d18e86c4006a60111222212904&q=giza&days=7');\n        const data = await response.data.forecast.forecastday;\n          setWeek(data)\n      }\n      useEffect(() => {\n        getData()\n      },[])\n    return (\n        <div>\n            {week.map(day => \n                <Day \n                  icon={day.day.condition.icon}\n                  text={day.day.condition.text}\n                  maxtemp={day.day.maxtemp_c}  \n                  mintemp={day.day.mintemp_c}  \n                  date={day.date} \n                />)}\n        </div>\n    )\n}\n\nexport default WeekInfo\n"]},"metadata":{},"sourceType":"module"}